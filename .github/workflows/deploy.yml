name: Build, Test, Publish and Deploy
on:
  workflow_call:
    secrets:
      NPM_AUTH_TOKEN:
        required: false
      GIT_TOKEN:
        required: true
      REGISTRY:
        required: false
      EXPO_TOKEN:
        required: true

env:
  VERSION_FLAG: ${{ github.event_name == 'pull_request' && github.base_ref == 'main' && '--releaseAs=prerelease --preid=rc' || github.ref_name == 'main' && '--skipProjectChangelog' || github.ref_name == 'staging' && '--releaseAs=prerelease --preid=beta' || '--releaseAs=prerelease --preid=alpha' }}
  NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
  REF_NAME_TEST: ${{ github.ref_name }}
  TEST_CHECK: ${{ github.ref_name == 'main' && '--skipProjectChangelog' || 'another' }}

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout appropriate version
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}
          fetch-depth: 0
      - name: Set git user details for git
        run: |
          git config --global user.email "actions@cdirs.com"
          git config --global user.name "CDIRS Action Bot"
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: | 
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Backup Yarn install
        run: yarn install --frozen-lockfile
      - name: Set NPM auth token for publishing requirements
        run: npm config set //${{ secrets.REGISTRY || 'registry.npmjs.org' }}/:_authToken=${{ env.NPM_AUTH_TOKEN }}
      - name: Derive appropriate SHAs `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - name: Bump version numbers where required
        run: npx nx affected --parallel=1 --target=version --baseBranch=HEAD~1 ${{ env.VERSION_FLAG }}
      - name: Push tags, version and changelog back to git
        run: git push --follow-tags

  lint:
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout appropriate version
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}
          fetch-depth: 0
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-node-modules
        with:
          path:  | 
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Backup Yarn install
        continue-on-error: true
        run: yarn install --frozen-lockfile
      - name: Cache NX Lint
        id: cache-nx-lint
        uses: actions/cache@v3
        env:
          cache-name: cache-nx-lint
        with:
          path: node_modules/.cache/nx
          key: ${{ runner.os }}-cache-nx-lint-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cache-nx-lint-
      - name: Lint changed libraries and apps
        run: npx nx run-many --all --target=lint --parallel=3
  test:
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout appropriate version
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}
          fetch-depth: 0
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-node-modules
        with:
          path:  | 
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Backup Yarn install
        continue-on-error: true
        run: yarn install --frozen-lockfile
      - name: Cache NX Tests
        id: cache-nx-tests
        uses: actions/cache@v3
        env:
          cache-name: cache-nx-tests
        with:
          path: node_modules/.cache/nx
          key: ${{ runner.os }}-cache-nx-tests-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cache-nx-tests-
      - name: Test changed libraries and apps
        run: npx nx run-many --all --target=test --parallel=3
  e2e-test:
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout appropriate version
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}
          fetch-depth: 0
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-node-modules
        with:
          path:  | 
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Backup Yarn install
        continue-on-error: true
        run: yarn install --frozen-lockfile
      - name: Cache NX E2E
        id: cache-nx-e2e
        uses: actions/cache@v3
        env:
          cache-name: cache-nx-e2e
        with:
          path: node_modules/.cache/nx
          key: ${{ runner.os }}-cache-nx-e2e-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cache-nx-e2e-
      - name: E2E test changed libraries and apps
        run: npx nx run-many --all --target=e2e --parallel=3

  build:
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout appropriate version
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}
          fetch-depth: 0
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-node-modules
        with:
          path:  | 
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Backup Yarn install
        continue-on-error: true
        run: yarn install --frozen-lockfile
      - name: Cache NX Builds
        id: cache-nx-builds
        uses: actions/cache@v3
        env:
          cache-name: cache-nx-builds
        with:
          path: node_modules/.cache/nx
          key: ${{ runner.os }}-cache-nx-builds-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cache-nx-builds-
      - name: Build changed libraries and apps
        run: npx nx run-many --all --target=build --parallel=3 --configuration=${{ github.ref_name == 'main' && 'production' || 'development' }}

  publish:
    needs: 
      - lint
      - test
      - e2e-test
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout appropriate version
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}
          fetch-depth: 0
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-node-modules
        with:
          path:  | 
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Backup Yarn install
        continue-on-error: true
        run: yarn install --frozen-lockfile
      - name: Derive appropriate SHAs `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - name: Publish changed libraries and apps
        run: npx nx affected --target=publish --parallel=3 --configuration=${{ github.ref_name == 'main' && 'production' || 'development' }}

  submit:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - e2e-test
      - build
    if: github.ref_name == 'main'
    steps:
      - name: Checkout appropriate version
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || '' }}
          fetch-depth: 0
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache/restore@v3
        env:
          cache-name: cache-node-modules
        with:
          path:  | 
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Backup Yarn install
        continue-on-error: true
        run: yarn install --frozen-lockfile
      - name: Derive appropriate SHAs `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - name: Submit changed libraries and apps
        run: npx nx affected --target=submit --parallel=3 --configuration=${{ github.ref_name == 'main' && 'production' || 'development' }}
